#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanSon.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Son")]
	public partial class dbQlBanSonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertSon(Son instance);
    partial void UpdateSon(Son instance);
    partial void DeleteSon(Son instance);
    partial void InsertHangSanXuat(HangSanXuat instance);
    partial void UpdateHangSanXuat(HangSanXuat instance);
    partial void DeleteHangSanXuat(HangSanXuat instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiSon(LoaiSon instance);
    partial void UpdateLoaiSon(LoaiSon instance);
    partial void DeleteLoaiSon(LoaiSon instance);
    partial void InsertNhanVienPT(NhanVienPT instance);
    partial void UpdateNhanVienPT(NhanVienPT instance);
    partial void DeleteNhanVienPT(NhanVienPT instance);
    partial void InsertPhanQuyen_Admin(PhanQuyen_Admin instance);
    partial void UpdatePhanQuyen_Admin(PhanQuyen_Admin instance);
    partial void DeletePhanQuyen_Admin(PhanQuyen_Admin instance);
    partial void InsertPhuTrach(PhuTrach instance);
    partial void UpdatePhuTrach(PhuTrach instance);
    partial void DeletePhuTrach(PhuTrach instance);
    #endregion
		
		public dbQlBanSonDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SonConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQlBanSonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQlBanSonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQlBanSonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQlBanSonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<Son> Sons
		{
			get
			{
				return this.GetTable<Son>();
			}
		}
		
		public System.Data.Linq.Table<HangSanXuat> HangSanXuats
		{
			get
			{
				return this.GetTable<HangSanXuat>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSon> LoaiSons
		{
			get
			{
				return this.GetTable<LoaiSon>();
			}
		}
		
		public System.Data.Linq.Table<NhanVienPT> NhanVienPTs
		{
			get
			{
				return this.GetTable<NhanVienPT>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen_Admin> PhanQuyen_Admins
		{
			get
			{
				return this.GetTable<PhanQuyen_Admin>();
			}
		}
		
		public System.Data.Linq.Table<PhuTrach> PhuTraches
		{
			get
			{
				return this.GetTable<PhuTrach>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private string _HoTen;
		
		private EntityRef<PhanQuyen_Admin> _PhanQuyen_Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public Admin()
		{
			this._PhanQuyen_Admin = default(EntityRef<PhanQuyen_Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_PhanQuyen_Admin", Storage="_PhanQuyen_Admin", ThisKey="Username", OtherKey="Username", IsUnique=true, IsForeignKey=false)]
		public PhanQuyen_Admin PhanQuyen_Admin
		{
			get
			{
				return this._PhanQuyen_Admin.Entity;
			}
			set
			{
				PhanQuyen_Admin previousValue = this._PhanQuyen_Admin.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen_Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen_Admin.Entity = null;
						previousValue.Admin = null;
					}
					this._PhanQuyen_Admin.Entity = value;
					if ((value != null))
					{
						value.Admin = this;
					}
					this.SendPropertyChanged("PhanQuyen_Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoHd;
		
		private int _MaSon;
		
		private int _SoLuong;
		
		private decimal _DonGia;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
		private EntityRef<Son> _Son;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHdChanging(int value);
    partial void OnSoHdChanged();
    partial void OnMaSonChanging(int value);
    partial void OnMaSonChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonDatHang = default(EntityRef<DonDatHang>);
			this._Son = default(EntityRef<Son>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHd", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoHd
		{
			get
			{
				return this._SoHd;
			}
			set
			{
				if ((this._SoHd != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHdChanging(value);
					this.SendPropertyChanging();
					this._SoHd = value;
					this.SendPropertyChanged("SoHd");
					this.OnSoHdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSon
		{
			get
			{
				return this._MaSon;
			}
			set
			{
				if ((this._MaSon != value))
				{
					if (this._Son.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSonChanging(value);
					this.SendPropertyChanging();
					this._MaSon = value;
					this.SendPropertyChanged("MaSon");
					this.OnMaSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0) NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_ChiTietDonHang", Storage="_DonDatHang", ThisKey="SoHd", OtherKey="SoHd", IsForeignKey=true)]
		public DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._SoHd = value.SoHd;
					}
					else
					{
						this._SoHd = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Son_ChiTietDonHang", Storage="_Son", ThisKey="MaSon", OtherKey="MaSon", IsForeignKey=true)]
		public Son Son
		{
			get
			{
				return this._Son.Entity;
			}
			set
			{
				Son previousValue = this._Son.Entity;
				if (((previousValue != value) 
							|| (this._Son.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Son.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._Son.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._MaSon = value.MaSon;
					}
					else
					{
						this._MaSon = default(int);
					}
					this.SendPropertyChanged("Son");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoHd;
		
		private int _MaKhachHang;
		
		private System.Nullable<System.DateTime> _NgayDh;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private System.Nullable<bool> _TinhTrangGiaoHang;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHdChanging(int value);
    partial void OnSoHdChanged();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnNgayDhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDhChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    partial void OnTinhTrangGiaoHangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangGiaoHangChanged();
    #endregion
		
		public DonDatHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SoHd
		{
			get
			{
				return this._SoHd;
			}
			set
			{
				if ((this._SoHd != value))
				{
					this.OnSoHdChanging(value);
					this.SendPropertyChanging();
					this._SoHd = value;
					this.SendPropertyChanged("SoHd");
					this.OnSoHdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int NOT NULL")]
		public int MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayDh
		{
			get
			{
				return this._NgayDh;
			}
			set
			{
				if ((this._NgayDh != value))
				{
					this.OnNgayDhChanging(value);
					this.SendPropertyChanging();
					this._NgayDh = value;
					this.SendPropertyChanged("NgayDh");
					this.OnNgayDhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangGiaoHang", DbType="Bit")]
		public System.Nullable<bool> TinhTrangGiaoHang
		{
			get
			{
				return this._TinhTrangGiaoHang;
			}
			set
			{
				if ((this._TinhTrangGiaoHang != value))
				{
					this.OnTinhTrangGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangGiaoHang = value;
					this.SendPropertyChanged("TinhTrangGiaoHang");
					this.OnTinhTrangGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="SoHd", OtherKey="SoHd")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Son")]
	public partial class Son : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSon;
		
		private int _MaLoaiSon;
		
		private int _MaNsx;
		
		private string _TenSon;
		
		private System.Nullable<decimal> _GiaBan;
		
		private string _MoTa;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _SoLuongTon;
		
		private System.Nullable<int> _Luotxem;
		
		private System.Nullable<int> _SoLuongBan;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<PhuTrach> _PhuTraches;
		
		private EntityRef<HangSanXuat> _HangSanXuat;
		
		private EntityRef<LoaiSon> _LoaiSon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSonChanging(int value);
    partial void OnMaSonChanged();
    partial void OnMaLoaiSonChanging(int value);
    partial void OnMaLoaiSonChanged();
    partial void OnMaNsxChanging(int value);
    partial void OnMaNsxChanged();
    partial void OnTenSonChanging(string value);
    partial void OnTenSonChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    partial void OnLuotxemChanging(System.Nullable<int> value);
    partial void OnLuotxemChanged();
    partial void OnSoLuongBanChanging(System.Nullable<int> value);
    partial void OnSoLuongBanChanged();
    #endregion
		
		public Son()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._PhuTraches = new EntitySet<PhuTrach>(new Action<PhuTrach>(this.attach_PhuTraches), new Action<PhuTrach>(this.detach_PhuTraches));
			this._HangSanXuat = default(EntityRef<HangSanXuat>);
			this._LoaiSon = default(EntityRef<LoaiSon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSon
		{
			get
			{
				return this._MaSon;
			}
			set
			{
				if ((this._MaSon != value))
				{
					this.OnMaSonChanging(value);
					this.SendPropertyChanging();
					this._MaSon = value;
					this.SendPropertyChanged("MaSon");
					this.OnMaSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSon", DbType="Int NOT NULL")]
		public int MaLoaiSon
		{
			get
			{
				return this._MaLoaiSon;
			}
			set
			{
				if ((this._MaLoaiSon != value))
				{
					if (this._LoaiSon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSonChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSon = value;
					this.SendPropertyChanged("MaLoaiSon");
					this.OnMaLoaiSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNsx", DbType="Int NOT NULL")]
		public int MaNsx
		{
			get
			{
				return this._MaNsx;
			}
			set
			{
				if ((this._MaNsx != value))
				{
					if (this._HangSanXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNsxChanging(value);
					this.SendPropertyChanging();
					this._MaNsx = value;
					this.SendPropertyChanged("MaNsx");
					this.OnMaNsxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSon", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSon
		{
			get
			{
				return this._TenSon;
			}
			set
			{
				if ((this._TenSon != value))
				{
					this.OnTenSonChanging(value);
					this.SendPropertyChanging();
					this._TenSon = value;
					this.SendPropertyChanged("TenSon");
					this.OnTenSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luotxem", DbType="Int")]
		public System.Nullable<int> Luotxem
		{
			get
			{
				return this._Luotxem;
			}
			set
			{
				if ((this._Luotxem != value))
				{
					this.OnLuotxemChanging(value);
					this.SendPropertyChanging();
					this._Luotxem = value;
					this.SendPropertyChanged("Luotxem");
					this.OnLuotxemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongBan", DbType="Int")]
		public System.Nullable<int> SoLuongBan
		{
			get
			{
				return this._SoLuongBan;
			}
			set
			{
				if ((this._SoLuongBan != value))
				{
					this.OnSoLuongBanChanging(value);
					this.SendPropertyChanging();
					this._SoLuongBan = value;
					this.SendPropertyChanged("SoLuongBan");
					this.OnSoLuongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Son_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="MaSon", OtherKey="MaSon")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Son_PhuTrach", Storage="_PhuTraches", ThisKey="MaSon", OtherKey="MaSon")]
		public EntitySet<PhuTrach> PhuTraches
		{
			get
			{
				return this._PhuTraches;
			}
			set
			{
				this._PhuTraches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSanXuat_Son", Storage="_HangSanXuat", ThisKey="MaNsx", OtherKey="MaNsx", IsForeignKey=true)]
		public HangSanXuat HangSanXuat
		{
			get
			{
				return this._HangSanXuat.Entity;
			}
			set
			{
				HangSanXuat previousValue = this._HangSanXuat.Entity;
				if (((previousValue != value) 
							|| (this._HangSanXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangSanXuat.Entity = null;
						previousValue.Sons.Remove(this);
					}
					this._HangSanXuat.Entity = value;
					if ((value != null))
					{
						value.Sons.Add(this);
						this._MaNsx = value.MaNsx;
					}
					else
					{
						this._MaNsx = default(int);
					}
					this.SendPropertyChanged("HangSanXuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSon_Son", Storage="_LoaiSon", ThisKey="MaLoaiSon", OtherKey="MaLoaiSon", IsForeignKey=true)]
		public LoaiSon LoaiSon
		{
			get
			{
				return this._LoaiSon.Entity;
			}
			set
			{
				LoaiSon previousValue = this._LoaiSon.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSon.Entity = null;
						previousValue.Sons.Remove(this);
					}
					this._LoaiSon.Entity = value;
					if ((value != null))
					{
						value.Sons.Add(this);
						this._MaLoaiSon = value.MaLoaiSon;
					}
					else
					{
						this._MaLoaiSon = default(int);
					}
					this.SendPropertyChanged("LoaiSon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Son = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Son = null;
		}
		
		private void attach_PhuTraches(PhuTrach entity)
		{
			this.SendPropertyChanging();
			entity.Son = this;
		}
		
		private void detach_PhuTraches(PhuTrach entity)
		{
			this.SendPropertyChanging();
			entity.Son = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangSanXuat")]
	public partial class HangSanXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNsx;
		
		private string _TenNsx;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private EntitySet<Son> _Sons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNsxChanging(int value);
    partial void OnMaNsxChanged();
    partial void OnTenNsxChanging(string value);
    partial void OnTenNsxChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public HangSanXuat()
		{
			this._Sons = new EntitySet<Son>(new Action<Son>(this.attach_Sons), new Action<Son>(this.detach_Sons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNsx", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNsx
		{
			get
			{
				return this._MaNsx;
			}
			set
			{
				if ((this._MaNsx != value))
				{
					this.OnMaNsxChanging(value);
					this.SendPropertyChanging();
					this._MaNsx = value;
					this.SendPropertyChanged("MaNsx");
					this.OnMaNsxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNsx", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNsx
		{
			get
			{
				return this._TenNsx;
			}
			set
			{
				if ((this._TenNsx != value))
				{
					this.OnTenNsxChanging(value);
					this.SendPropertyChanging();
					this._TenNsx = value;
					this.SendPropertyChanged("TenNsx");
					this.OnTenNsxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(50)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSanXuat_Son", Storage="_Sons", ThisKey="MaNsx", OtherKey="MaNsx")]
		public EntitySet<Son> Sons
		{
			get
			{
				return this._Sons;
			}
			set
			{
				this._Sons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sons(Son entity)
		{
			this.SendPropertyChanging();
			entity.HangSanXuat = this;
		}
		
		private void detach_Sons(Son entity)
		{
			this.SendPropertyChanging();
			entity.HangSanXuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhachHang;
		
		private string _TenKhachHang;
		
		private string _MatKhau;
		
		private string _TaiKhoan;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _DT;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDTChanging(string value);
    partial void OnDTChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(50)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="VarChar(50)")]
		public string DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_DonDatHangs", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSon")]
	public partial class LoaiSon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSon;
		
		private string _TenLoaiSon;
		
		private EntitySet<Son> _Sons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSonChanging(int value);
    partial void OnMaLoaiSonChanged();
    partial void OnTenLoaiSonChanging(string value);
    partial void OnTenLoaiSonChanged();
    #endregion
		
		public LoaiSon()
		{
			this._Sons = new EntitySet<Son>(new Action<Son>(this.attach_Sons), new Action<Son>(this.detach_Sons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiSon
		{
			get
			{
				return this._MaLoaiSon;
			}
			set
			{
				if ((this._MaLoaiSon != value))
				{
					this.OnMaLoaiSonChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSon = value;
					this.SendPropertyChanged("MaLoaiSon");
					this.OnMaLoaiSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiSon
		{
			get
			{
				return this._TenLoaiSon;
			}
			set
			{
				if ((this._TenLoaiSon != value))
				{
					this.OnTenLoaiSonChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSon = value;
					this.SendPropertyChanged("TenLoaiSon");
					this.OnTenLoaiSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSon_Son", Storage="_Sons", ThisKey="MaLoaiSon", OtherKey="MaLoaiSon")]
		public EntitySet<Son> Sons
		{
			get
			{
				return this._Sons;
			}
			set
			{
				this._Sons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sons(Son entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSon = this;
		}
		
		private void detach_Sons(Son entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVienPT")]
	public partial class NhanVienPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNvPt;
		
		private string _TenNv;
		
		private string _DiaChinv;
		
		private string _TieuSu;
		
		private string _Sdtnv;
		
		private EntitySet<PhuTrach> _PhuTraches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNvPtChanging(int value);
    partial void OnMaNvPtChanged();
    partial void OnTenNvChanging(string value);
    partial void OnTenNvChanged();
    partial void OnDiaChinvChanging(string value);
    partial void OnDiaChinvChanged();
    partial void OnTieuSuChanging(string value);
    partial void OnTieuSuChanged();
    partial void OnSdtnvChanging(string value);
    partial void OnSdtnvChanged();
    #endregion
		
		public NhanVienPT()
		{
			this._PhuTraches = new EntitySet<PhuTrach>(new Action<PhuTrach>(this.attach_PhuTraches), new Action<PhuTrach>(this.detach_PhuTraches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNvPt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNvPt
		{
			get
			{
				return this._MaNvPt;
			}
			set
			{
				if ((this._MaNvPt != value))
				{
					this.OnMaNvPtChanging(value);
					this.SendPropertyChanging();
					this._MaNvPt = value;
					this.SendPropertyChanged("MaNvPt");
					this.OnMaNvPtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNv
		{
			get
			{
				return this._TenNv;
			}
			set
			{
				if ((this._TenNv != value))
				{
					this.OnTenNvChanging(value);
					this.SendPropertyChanging();
					this._TenNv = value;
					this.SendPropertyChanged("TenNv");
					this.OnTenNvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChinv", DbType="NVarChar(100)")]
		public string DiaChinv
		{
			get
			{
				return this._DiaChinv;
			}
			set
			{
				if ((this._DiaChinv != value))
				{
					this.OnDiaChinvChanging(value);
					this.SendPropertyChanging();
					this._DiaChinv = value;
					this.SendPropertyChanged("DiaChinv");
					this.OnDiaChinvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuSu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TieuSu
		{
			get
			{
				return this._TieuSu;
			}
			set
			{
				if ((this._TieuSu != value))
				{
					this.OnTieuSuChanging(value);
					this.SendPropertyChanging();
					this._TieuSu = value;
					this.SendPropertyChanged("TieuSu");
					this.OnTieuSuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sdtnv", DbType="VarChar(50)")]
		public string Sdtnv
		{
			get
			{
				return this._Sdtnv;
			}
			set
			{
				if ((this._Sdtnv != value))
				{
					this.OnSdtnvChanging(value);
					this.SendPropertyChanging();
					this._Sdtnv = value;
					this.SendPropertyChanged("Sdtnv");
					this.OnSdtnvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVienPT_PhuTrach", Storage="_PhuTraches", ThisKey="MaNvPt", OtherKey="MaNvPt")]
		public EntitySet<PhuTrach> PhuTraches
		{
			get
			{
				return this._PhuTraches;
			}
			set
			{
				this._PhuTraches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhuTraches(PhuTrach entity)
		{
			this.SendPropertyChanging();
			entity.NhanVienPT = this;
		}
		
		private void detach_PhuTraches(PhuTrach entity)
		{
			this.SendPropertyChanging();
			entity.NhanVienPT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen_Admin")]
	public partial class PhanQuyen_Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private System.Nullable<int> _PQ_Son;
		
		private System.Nullable<int> _PQ_HangSanXuat;
		
		private System.Nullable<int> _PQ_DonDatHang;
		
		private System.Nullable<int> _PQ_KhachHang;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPQ_SonChanging(System.Nullable<int> value);
    partial void OnPQ_SonChanged();
    partial void OnPQ_HangSanXuatChanging(System.Nullable<int> value);
    partial void OnPQ_HangSanXuatChanged();
    partial void OnPQ_DonDatHangChanging(System.Nullable<int> value);
    partial void OnPQ_DonDatHangChanged();
    partial void OnPQ_KhachHangChanging(System.Nullable<int> value);
    partial void OnPQ_KhachHangChanged();
    #endregion
		
		public PhanQuyen_Admin()
		{
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQ_Son", DbType="Int")]
		public System.Nullable<int> PQ_Son
		{
			get
			{
				return this._PQ_Son;
			}
			set
			{
				if ((this._PQ_Son != value))
				{
					this.OnPQ_SonChanging(value);
					this.SendPropertyChanging();
					this._PQ_Son = value;
					this.SendPropertyChanged("PQ_Son");
					this.OnPQ_SonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQ_HangSanXuat", DbType="Int")]
		public System.Nullable<int> PQ_HangSanXuat
		{
			get
			{
				return this._PQ_HangSanXuat;
			}
			set
			{
				if ((this._PQ_HangSanXuat != value))
				{
					this.OnPQ_HangSanXuatChanging(value);
					this.SendPropertyChanging();
					this._PQ_HangSanXuat = value;
					this.SendPropertyChanged("PQ_HangSanXuat");
					this.OnPQ_HangSanXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQ_DonDatHang", DbType="Int")]
		public System.Nullable<int> PQ_DonDatHang
		{
			get
			{
				return this._PQ_DonDatHang;
			}
			set
			{
				if ((this._PQ_DonDatHang != value))
				{
					this.OnPQ_DonDatHangChanging(value);
					this.SendPropertyChanging();
					this._PQ_DonDatHang = value;
					this.SendPropertyChanged("PQ_DonDatHang");
					this.OnPQ_DonDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQ_KhachHang", DbType="Int")]
		public System.Nullable<int> PQ_KhachHang
		{
			get
			{
				return this._PQ_KhachHang;
			}
			set
			{
				if ((this._PQ_KhachHang != value))
				{
					this.OnPQ_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._PQ_KhachHang = value;
					this.SendPropertyChanged("PQ_KhachHang");
					this.OnPQ_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_PhanQuyen_Admin", Storage="_Admin", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.PhanQuyen_Admin = null;
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.PhanQuyen_Admin = this;
						this._Username = value.Username;
					}
					else
					{
						this._Username = default(string);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhuTrach")]
	public partial class PhuTrach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNvPt;
		
		private int _MaSon;
		
		private string _VaiTro;
		
		private string _ViTri;
		
		private EntityRef<NhanVienPT> _NhanVienPT;
		
		private EntityRef<Son> _Son;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNvPtChanging(int value);
    partial void OnMaNvPtChanged();
    partial void OnMaSonChanging(int value);
    partial void OnMaSonChanged();
    partial void OnVaiTroChanging(string value);
    partial void OnVaiTroChanged();
    partial void OnViTriChanging(string value);
    partial void OnViTriChanged();
    #endregion
		
		public PhuTrach()
		{
			this._NhanVienPT = default(EntityRef<NhanVienPT>);
			this._Son = default(EntityRef<Son>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNvPt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNvPt
		{
			get
			{
				return this._MaNvPt;
			}
			set
			{
				if ((this._MaNvPt != value))
				{
					if (this._NhanVienPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNvPtChanging(value);
					this.SendPropertyChanging();
					this._MaNvPt = value;
					this.SendPropertyChanged("MaNvPt");
					this.OnMaNvPtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSon
		{
			get
			{
				return this._MaSon;
			}
			set
			{
				if ((this._MaSon != value))
				{
					if (this._Son.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSonChanging(value);
					this.SendPropertyChanging();
					this._MaSon = value;
					this.SendPropertyChanged("MaSon");
					this.OnMaSonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTro", DbType="NVarChar(50)")]
		public string VaiTro
		{
			get
			{
				return this._VaiTro;
			}
			set
			{
				if ((this._VaiTro != value))
				{
					this.OnVaiTroChanging(value);
					this.SendPropertyChanging();
					this._VaiTro = value;
					this.SendPropertyChanged("VaiTro");
					this.OnVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="NVarChar(50)")]
		public string ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVienPT_PhuTrach", Storage="_NhanVienPT", ThisKey="MaNvPt", OtherKey="MaNvPt", IsForeignKey=true)]
		public NhanVienPT NhanVienPT
		{
			get
			{
				return this._NhanVienPT.Entity;
			}
			set
			{
				NhanVienPT previousValue = this._NhanVienPT.Entity;
				if (((previousValue != value) 
							|| (this._NhanVienPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVienPT.Entity = null;
						previousValue.PhuTraches.Remove(this);
					}
					this._NhanVienPT.Entity = value;
					if ((value != null))
					{
						value.PhuTraches.Add(this);
						this._MaNvPt = value.MaNvPt;
					}
					else
					{
						this._MaNvPt = default(int);
					}
					this.SendPropertyChanged("NhanVienPT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Son_PhuTrach", Storage="_Son", ThisKey="MaSon", OtherKey="MaSon", IsForeignKey=true)]
		public Son Son
		{
			get
			{
				return this._Son.Entity;
			}
			set
			{
				Son previousValue = this._Son.Entity;
				if (((previousValue != value) 
							|| (this._Son.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Son.Entity = null;
						previousValue.PhuTraches.Remove(this);
					}
					this._Son.Entity = value;
					if ((value != null))
					{
						value.PhuTraches.Add(this);
						this._MaSon = value.MaSon;
					}
					else
					{
						this._MaSon = default(int);
					}
					this.SendPropertyChanged("Son");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
